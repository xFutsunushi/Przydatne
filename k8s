#!/bin/bash

swapoff -a
#vi /etc/fstab - komentujemy swapa

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sleep 5

sudo modprobe overlay
sudo modprobe br_netfilter

sleep 5

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sleep 2

# Apply sysctl params without reboot
sudo sysctl --system

sleep 2

sudo apt-get remove docker docker-engine docker.io containerd runc
sleep 2
sudo apt-get update
sleep 2
sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
sudo mkdir -p /etc/apt/keyrings
sleep 2 
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sleep 2
sudo apt-get update
sleep 2
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
sleep 2
git clone https://github.com/Mirantis/cri-dockerd.git



# Run these commands as root
###Install GO###
wget https://storage.googleapis.com/golang/getgo/installer_linux
chmod +x ./installer_linux
./installer_linux
source ~/.bash_profile

sleep 5

cd cri-dockerd
mkdir bin
go build -o bin/cri-dockerd

------------------------------------------------------------------------------------------------------------------
sudo mkdir -p /usr/local/bin
sudo install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
sudo cp -a packaging/systemd/* /etc/systemd/system
sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service

-------------------------------------------------------------------------------------------------------------------
sudo systemctl daemon-reload
sudo systemctl enable cri-docker.service
sudo systemctl enable --now cri-docker.socket


sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list


sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl


sudo apt-mark hold kubelet kubeadm kubectl
sudo kubeadm config images pull --cri-socket /run/cri-dockerd.sock 

kubeadm init --control-plane-endpoint=k8smaster.proxya.loc --pod-network-cidr=10.244.0.0/16--cri-socket=unix:///run/cri-dockerd.sock

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

#Flannel:
#CHANGE NETWORK!!!
wget  https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml

#Calico:
#kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml

```
